syntax = "proto3";

package panelclone;

message PushState {
  oneof pushEvent {
    DrefValue drefWrite = 1;
    
  }
}

message StateUpdate {
  uint32 frame = 1;
  
  // This only contains indexes for NEW drefs
  // not present in previous state updates...
  repeated PubValIndex publishedValueIndexes = 2;

  // Changes in state...
  repeated DrefValue drefChanges = 3;

  optional x264FrameData panelFrameData = 4;
}

message x264FrameData {
    int32 cols = 1;
    int32 rows = 2;
    int32 channels = 3;
    bytes image_bytes = 4;
}

message PubValIndex {
  int32 index = 1;
  string dataref = 2;
  int32 dref_index = 3;
}

/*
enum StateRequestMsgType {
  DATAREF_REGISTER = 0;
  SNAPSHOT_REQUEST = 1;
}
*/


// NEED TO INCLUDE SOME KIND OF 
// CHECK THAT WE HAVE THE RIGHT AIRCRAFT
// AND RETURN AN EMPTY STATE WITH FRAME 0
// ETC AS MESSAGE WE ARE NOT YET IN CORRECT AIRCRAFT

message StateRequest {
  //StateRequestMsgType type = 1;
  repeated RegisterDref drefs = 2;
}

message RegisterDref {
  string dataref = 1;
  int32 index = 2;
}

/*
message DrefIndexTable {
  uint32 tableNonce = 1;
  map<string, uint32> drefIndexes = 2;
}
*/

message Snapshot {
  //DrefIndexTable drefIndexTable = 1;
  StateUpdate frameSnapshot = 2;
}

message DrefIntArrayValue {
  int32 value = 1;
  uint32 index = 2;
}

message DrefFloatArrayValue {
  float value = 1;
  uint32 index = 2;
}

message DrefByteValue {
  bytes value = 1;
  uint32 size = 2;
}

message DrefValue {
  uint32 index = 1;
  oneof value {
    int32 intVal = 2;
    float floatVal = 3;
    //DrefIntArrayValue intArrayVal = 4;
    //DrefFloatArrayValue floatArrayVal = 5;
    double doubleVal = 6;
    DrefByteValue byteVal = 7;
  } 
}