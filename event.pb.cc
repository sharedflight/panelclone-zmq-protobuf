// Generated by the protocol buffer compiler.  DO NOT EDIT!
// NO CHECKED-IN PROTOBUF GENCODE
// source: event.proto
// Protobuf C++ Version: 5.28.2

#include "event.pb.h"

#include <algorithm>
#include <type_traits>
#include "google/protobuf/io/coded_stream.h"
#include "google/protobuf/generated_message_tctable_impl.h"
#include "google/protobuf/extension_set.h"
#include "google/protobuf/wire_format_lite.h"
#include "google/protobuf/descriptor.h"
#include "google/protobuf/generated_message_reflection.h"
#include "google/protobuf/reflection_ops.h"
#include "google/protobuf/wire_format.h"
// @@protoc_insertion_point(includes)

// Must be included last.
#include "google/protobuf/port_def.inc"
PROTOBUF_PRAGMA_INIT_SEG
namespace _pb = ::google::protobuf;
namespace _pbi = ::google::protobuf::internal;
namespace _fl = ::google::protobuf::internal::field_layout;
namespace panelclone {

inline constexpr x264FrameData::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : image_bytes_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        cols_{0},
        rows_{0},
        channels_{0},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR x264FrameData::x264FrameData(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct x264FrameDataDefaultTypeInternal {
  PROTOBUF_CONSTEXPR x264FrameDataDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~x264FrameDataDefaultTypeInternal() {}
  union {
    x264FrameData _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 x264FrameDataDefaultTypeInternal _x264FrameData_default_instance_;

inline constexpr RegisterDref::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : dataref_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        index_{0},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR RegisterDref::RegisterDref(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct RegisterDrefDefaultTypeInternal {
  PROTOBUF_CONSTEXPR RegisterDrefDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~RegisterDrefDefaultTypeInternal() {}
  union {
    RegisterDref _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 RegisterDrefDefaultTypeInternal _RegisterDref_default_instance_;

inline constexpr PubValIndex::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : dataref_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        index_{0},
        dref_index_{0},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR PubValIndex::PubValIndex(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct PubValIndexDefaultTypeInternal {
  PROTOBUF_CONSTEXPR PubValIndexDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~PubValIndexDefaultTypeInternal() {}
  union {
    PubValIndex _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 PubValIndexDefaultTypeInternal _PubValIndex_default_instance_;

inline constexpr DrefIntArrayValue::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : value_{0},
        index_{0u},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR DrefIntArrayValue::DrefIntArrayValue(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct DrefIntArrayValueDefaultTypeInternal {
  PROTOBUF_CONSTEXPR DrefIntArrayValueDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~DrefIntArrayValueDefaultTypeInternal() {}
  union {
    DrefIntArrayValue _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 DrefIntArrayValueDefaultTypeInternal _DrefIntArrayValue_default_instance_;

inline constexpr DrefFloatArrayValue::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : value_{0},
        index_{0u},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR DrefFloatArrayValue::DrefFloatArrayValue(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct DrefFloatArrayValueDefaultTypeInternal {
  PROTOBUF_CONSTEXPR DrefFloatArrayValueDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~DrefFloatArrayValueDefaultTypeInternal() {}
  union {
    DrefFloatArrayValue _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 DrefFloatArrayValueDefaultTypeInternal _DrefFloatArrayValue_default_instance_;

inline constexpr DrefByteValue::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : value_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        size_{0u},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR DrefByteValue::DrefByteValue(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct DrefByteValueDefaultTypeInternal {
  PROTOBUF_CONSTEXPR DrefByteValueDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~DrefByteValueDefaultTypeInternal() {}
  union {
    DrefByteValue _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 DrefByteValueDefaultTypeInternal _DrefByteValue_default_instance_;

inline constexpr StateRequest::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : drefs_{},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR StateRequest::StateRequest(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct StateRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR StateRequestDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~StateRequestDefaultTypeInternal() {}
  union {
    StateRequest _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 StateRequestDefaultTypeInternal _StateRequest_default_instance_;

inline constexpr DrefValue::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : index_{0u},
        value_{},
        _cached_size_{0},
        _oneof_case_{} {}

template <typename>
PROTOBUF_CONSTEXPR DrefValue::DrefValue(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct DrefValueDefaultTypeInternal {
  PROTOBUF_CONSTEXPR DrefValueDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~DrefValueDefaultTypeInternal() {}
  union {
    DrefValue _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 DrefValueDefaultTypeInternal _DrefValue_default_instance_;

inline constexpr StateUpdate::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        publishedvalueindexes_{},
        drefchanges_{},
        panelframedata_{nullptr},
        frame_{0u} {}

template <typename>
PROTOBUF_CONSTEXPR StateUpdate::StateUpdate(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct StateUpdateDefaultTypeInternal {
  PROTOBUF_CONSTEXPR StateUpdateDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~StateUpdateDefaultTypeInternal() {}
  union {
    StateUpdate _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 StateUpdateDefaultTypeInternal _StateUpdate_default_instance_;

inline constexpr PushState::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : pushEvent_{},
        _cached_size_{0},
        _oneof_case_{} {}

template <typename>
PROTOBUF_CONSTEXPR PushState::PushState(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct PushStateDefaultTypeInternal {
  PROTOBUF_CONSTEXPR PushStateDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~PushStateDefaultTypeInternal() {}
  union {
    PushState _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 PushStateDefaultTypeInternal _PushState_default_instance_;

inline constexpr Snapshot::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        framesnapshot_{nullptr} {}

template <typename>
PROTOBUF_CONSTEXPR Snapshot::Snapshot(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct SnapshotDefaultTypeInternal {
  PROTOBUF_CONSTEXPR SnapshotDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~SnapshotDefaultTypeInternal() {}
  union {
    Snapshot _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 SnapshotDefaultTypeInternal _Snapshot_default_instance_;
}  // namespace panelclone
static constexpr const ::_pb::EnumDescriptor**
    file_level_enum_descriptors_event_2eproto = nullptr;
static constexpr const ::_pb::ServiceDescriptor**
    file_level_service_descriptors_event_2eproto = nullptr;
const ::uint32_t
    TableStruct_event_2eproto::offsets[] ABSL_ATTRIBUTE_SECTION_VARIABLE(
        protodesc_cold) = {
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::panelclone::PushState, _internal_metadata_),
        ~0u,  // no _extensions_
        PROTOBUF_FIELD_OFFSET(::panelclone::PushState, _impl_._oneof_case_[0]),
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        ::_pbi::kInvalidFieldOffsetTag,
        PROTOBUF_FIELD_OFFSET(::panelclone::PushState, _impl_.pushEvent_),
        PROTOBUF_FIELD_OFFSET(::panelclone::StateUpdate, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::panelclone::StateUpdate, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::panelclone::StateUpdate, _impl_.frame_),
        PROTOBUF_FIELD_OFFSET(::panelclone::StateUpdate, _impl_.publishedvalueindexes_),
        PROTOBUF_FIELD_OFFSET(::panelclone::StateUpdate, _impl_.drefchanges_),
        PROTOBUF_FIELD_OFFSET(::panelclone::StateUpdate, _impl_.panelframedata_),
        ~0u,
        ~0u,
        ~0u,
        0,
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::panelclone::x264FrameData, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::panelclone::x264FrameData, _impl_.cols_),
        PROTOBUF_FIELD_OFFSET(::panelclone::x264FrameData, _impl_.rows_),
        PROTOBUF_FIELD_OFFSET(::panelclone::x264FrameData, _impl_.channels_),
        PROTOBUF_FIELD_OFFSET(::panelclone::x264FrameData, _impl_.image_bytes_),
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::panelclone::PubValIndex, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::panelclone::PubValIndex, _impl_.index_),
        PROTOBUF_FIELD_OFFSET(::panelclone::PubValIndex, _impl_.dataref_),
        PROTOBUF_FIELD_OFFSET(::panelclone::PubValIndex, _impl_.dref_index_),
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::panelclone::StateRequest, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::panelclone::StateRequest, _impl_.drefs_),
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::panelclone::RegisterDref, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::panelclone::RegisterDref, _impl_.dataref_),
        PROTOBUF_FIELD_OFFSET(::panelclone::RegisterDref, _impl_.index_),
        PROTOBUF_FIELD_OFFSET(::panelclone::Snapshot, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::panelclone::Snapshot, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::panelclone::Snapshot, _impl_.framesnapshot_),
        0,
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::panelclone::DrefIntArrayValue, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::panelclone::DrefIntArrayValue, _impl_.value_),
        PROTOBUF_FIELD_OFFSET(::panelclone::DrefIntArrayValue, _impl_.index_),
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::panelclone::DrefFloatArrayValue, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::panelclone::DrefFloatArrayValue, _impl_.value_),
        PROTOBUF_FIELD_OFFSET(::panelclone::DrefFloatArrayValue, _impl_.index_),
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::panelclone::DrefByteValue, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::panelclone::DrefByteValue, _impl_.value_),
        PROTOBUF_FIELD_OFFSET(::panelclone::DrefByteValue, _impl_.size_),
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::panelclone::DrefValue, _internal_metadata_),
        ~0u,  // no _extensions_
        PROTOBUF_FIELD_OFFSET(::panelclone::DrefValue, _impl_._oneof_case_[0]),
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::panelclone::DrefValue, _impl_.index_),
        ::_pbi::kInvalidFieldOffsetTag,
        ::_pbi::kInvalidFieldOffsetTag,
        ::_pbi::kInvalidFieldOffsetTag,
        ::_pbi::kInvalidFieldOffsetTag,
        PROTOBUF_FIELD_OFFSET(::panelclone::DrefValue, _impl_.value_),
};

static const ::_pbi::MigrationSchema
    schemas[] ABSL_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
        {0, -1, -1, sizeof(::panelclone::PushState)},
        {10, 22, -1, sizeof(::panelclone::StateUpdate)},
        {26, -1, -1, sizeof(::panelclone::x264FrameData)},
        {38, -1, -1, sizeof(::panelclone::PubValIndex)},
        {49, -1, -1, sizeof(::panelclone::StateRequest)},
        {58, -1, -1, sizeof(::panelclone::RegisterDref)},
        {68, 77, -1, sizeof(::panelclone::Snapshot)},
        {78, -1, -1, sizeof(::panelclone::DrefIntArrayValue)},
        {88, -1, -1, sizeof(::panelclone::DrefFloatArrayValue)},
        {98, -1, -1, sizeof(::panelclone::DrefByteValue)},
        {108, -1, -1, sizeof(::panelclone::DrefValue)},
};
static const ::_pb::Message* const file_default_instances[] = {
    &::panelclone::_PushState_default_instance_._instance,
    &::panelclone::_StateUpdate_default_instance_._instance,
    &::panelclone::_x264FrameData_default_instance_._instance,
    &::panelclone::_PubValIndex_default_instance_._instance,
    &::panelclone::_StateRequest_default_instance_._instance,
    &::panelclone::_RegisterDref_default_instance_._instance,
    &::panelclone::_Snapshot_default_instance_._instance,
    &::panelclone::_DrefIntArrayValue_default_instance_._instance,
    &::panelclone::_DrefFloatArrayValue_default_instance_._instance,
    &::panelclone::_DrefByteValue_default_instance_._instance,
    &::panelclone::_DrefValue_default_instance_._instance,
};
const char descriptor_table_protodef_event_2eproto[] ABSL_ATTRIBUTE_SECTION_VARIABLE(
    protodesc_cold) = {
    "\n\013event.proto\022\npanelclone\"D\n\tPushState\022*"
    "\n\tdrefWrite\030\001 \001(\0132\025.panelclone.DrefValue"
    "H\000B\013\n\tpushEvent\"\313\001\n\013StateUpdate\022\r\n\005frame"
    "\030\001 \001(\r\0226\n\025publishedValueIndexes\030\002 \003(\0132\027."
    "panelclone.PubValIndex\022*\n\013drefChanges\030\003 "
    "\003(\0132\025.panelclone.DrefValue\0226\n\016panelFrame"
    "Data\030\004 \001(\0132\031.panelclone.x264FrameDataH\000\210"
    "\001\001B\021\n\017_panelFrameData\"R\n\rx264FrameData\022\014"
    "\n\004cols\030\001 \001(\005\022\014\n\004rows\030\002 \001(\005\022\020\n\010channels\030\003"
    " \001(\005\022\023\n\013image_bytes\030\004 \001(\014\"A\n\013PubValIndex"
    "\022\r\n\005index\030\001 \001(\005\022\017\n\007dataref\030\002 \001(\t\022\022\n\ndref"
    "_index\030\003 \001(\005\"7\n\014StateRequest\022\'\n\005drefs\030\002 "
    "\003(\0132\030.panelclone.RegisterDref\".\n\014Registe"
    "rDref\022\017\n\007dataref\030\001 \001(\t\022\r\n\005index\030\002 \001(\005\":\n"
    "\010Snapshot\022.\n\rframeSnapshot\030\002 \001(\0132\027.panel"
    "clone.StateUpdate\"1\n\021DrefIntArrayValue\022\r"
    "\n\005value\030\001 \001(\005\022\r\n\005index\030\002 \001(\r\"3\n\023DrefFloa"
    "tArrayValue\022\r\n\005value\030\001 \001(\002\022\r\n\005index\030\002 \001("
    "\r\",\n\rDrefByteValue\022\r\n\005value\030\001 \001(\014\022\014\n\004siz"
    "e\030\002 \001(\r\"\214\001\n\tDrefValue\022\r\n\005index\030\001 \001(\r\022\020\n\006"
    "intVal\030\002 \001(\005H\000\022\022\n\010floatVal\030\003 \001(\002H\000\022\023\n\tdo"
    "ubleVal\030\006 \001(\001H\000\022,\n\007byteVal\030\007 \001(\0132\031.panel"
    "clone.DrefByteValueH\000B\007\n\005valueb\006proto3"
};
static ::absl::once_flag descriptor_table_event_2eproto_once;
PROTOBUF_CONSTINIT const ::_pbi::DescriptorTable descriptor_table_event_2eproto = {
    false,
    false,
    918,
    descriptor_table_protodef_event_2eproto,
    "event.proto",
    &descriptor_table_event_2eproto_once,
    nullptr,
    0,
    11,
    schemas,
    file_default_instances,
    TableStruct_event_2eproto::offsets,
    file_level_enum_descriptors_event_2eproto,
    file_level_service_descriptors_event_2eproto,
};
namespace panelclone {
// ===================================================================

class PushState::_Internal {
 public:
  static constexpr ::int32_t kOneofCaseOffset =
      PROTOBUF_FIELD_OFFSET(::panelclone::PushState, _impl_._oneof_case_);
};

void PushState::set_allocated_drefwrite(::panelclone::DrefValue* drefwrite) {
  ::google::protobuf::Arena* message_arena = GetArena();
  clear_pushEvent();
  if (drefwrite) {
    ::google::protobuf::Arena* submessage_arena = drefwrite->GetArena();
    if (message_arena != submessage_arena) {
      drefwrite = ::google::protobuf::internal::GetOwnedMessage(message_arena, drefwrite, submessage_arena);
    }
    set_has_drefwrite();
    _impl_.pushEvent_.drefwrite_ = drefwrite;
  }
  // @@protoc_insertion_point(field_set_allocated:panelclone.PushState.drefWrite)
}
PushState::PushState(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:panelclone.PushState)
}
inline PROTOBUF_NDEBUG_INLINE PushState::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::panelclone::PushState& from_msg)
      : pushEvent_{},
        _cached_size_{0},
        _oneof_case_{from._oneof_case_[0]} {}

PushState::PushState(
    ::google::protobuf::Arena* arena,
    const PushState& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  PushState* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  switch (pushEvent_case()) {
    case PUSHEVENT_NOT_SET:
      break;
      case kDrefWrite:
        _impl_.pushEvent_.drefwrite_ = ::google::protobuf::Message::CopyConstruct<::panelclone::DrefValue>(arena, *from._impl_.pushEvent_.drefwrite_);
        break;
  }

  // @@protoc_insertion_point(copy_constructor:panelclone.PushState)
}
inline PROTOBUF_NDEBUG_INLINE PushState::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : pushEvent_{},
        _cached_size_{0},
        _oneof_case_{} {}

inline void PushState::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
}
PushState::~PushState() {
  // @@protoc_insertion_point(destructor:panelclone.PushState)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void PushState::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  if (has_pushEvent()) {
    clear_pushEvent();
  }
  _impl_.~Impl_();
}

void PushState::clear_pushEvent() {
// @@protoc_insertion_point(one_of_clear_start:panelclone.PushState)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  switch (pushEvent_case()) {
    case kDrefWrite: {
      if (GetArena() == nullptr) {
        delete _impl_.pushEvent_.drefwrite_;
      } else if (::google::protobuf::internal::DebugHardenClearOneofMessageOnArena()) {
        ::google::protobuf::internal::MaybePoisonAfterClear(_impl_.pushEvent_.drefwrite_);
      }
      break;
    }
    case PUSHEVENT_NOT_SET: {
      break;
    }
  }
  _impl_._oneof_case_[0] = PUSHEVENT_NOT_SET;
}


PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::MessageLite::ClassDataFull
    PushState::_class_data_ = {
        ::google::protobuf::Message::ClassData{
            &_PushState_default_instance_._instance,
            &_table_.header,
            nullptr,  // OnDemandRegisterArenaDtor
            nullptr,  // IsInitialized
            &PushState::MergeImpl,
#if defined(PROTOBUF_CUSTOM_VTABLE)
            ::google::protobuf::Message::GetDeleteImpl<PushState>(),
            ::google::protobuf::Message::GetNewImpl<PushState>(),
            ::google::protobuf::Message::GetClearImpl<PushState>(), &PushState::ByteSizeLong,
                &PushState::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
            PROTOBUF_FIELD_OFFSET(PushState, _impl_._cached_size_),
            false,
        },
        &PushState::kDescriptorMethods,
        &descriptor_table_event_2eproto,
        nullptr,  // tracker
};
const ::google::protobuf::MessageLite::ClassData* PushState::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 1, 0, 2> PushState::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::panelclone::PushState>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
  }}, {{
    65535, 65535
  }}, {{
    // .panelclone.DrefValue drefWrite = 1;
    {PROTOBUF_FIELD_OFFSET(PushState, _impl_.pushEvent_.drefwrite_), _Internal::kOneofCaseOffset + 0, 0,
    (0 | ::_fl::kFcOneof | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::panelclone::DrefValue>()},
  }}, {{
  }},
};

PROTOBUF_NOINLINE void PushState::Clear() {
// @@protoc_insertion_point(message_clear_start:panelclone.PushState)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  clear_pushEvent();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* PushState::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const PushState& this_ = static_cast<const PushState&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* PushState::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const PushState& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:panelclone.PushState)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          // .panelclone.DrefValue drefWrite = 1;
          if (this_.pushEvent_case() == kDrefWrite) {
            target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                1, *this_._impl_.pushEvent_.drefwrite_, this_._impl_.pushEvent_.drefwrite_->GetCachedSize(), target,
                stream);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:panelclone.PushState)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t PushState::ByteSizeLong(const MessageLite& base) {
          const PushState& this_ = static_cast<const PushState&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t PushState::ByteSizeLong() const {
          const PushState& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:panelclone.PushState)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          switch (this_.pushEvent_case()) {
            // .panelclone.DrefValue drefWrite = 1;
            case kDrefWrite: {
              total_size += 1 +
                            ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.pushEvent_.drefwrite_);
              break;
            }
            case PUSHEVENT_NOT_SET: {
              break;
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void PushState::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<PushState*>(&to_msg);
  auto& from = static_cast<const PushState&>(from_msg);
  ::google::protobuf::Arena* arena = _this->GetArena();
  // @@protoc_insertion_point(class_specific_merge_from_start:panelclone.PushState)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (const uint32_t oneof_from_case = from._impl_._oneof_case_[0]) {
    const uint32_t oneof_to_case = _this->_impl_._oneof_case_[0];
    const bool oneof_needs_init = oneof_to_case != oneof_from_case;
    if (oneof_needs_init) {
      if (oneof_to_case != 0) {
        _this->clear_pushEvent();
      }
      _this->_impl_._oneof_case_[0] = oneof_from_case;
    }

    switch (oneof_from_case) {
      case kDrefWrite: {
        if (oneof_needs_init) {
          _this->_impl_.pushEvent_.drefwrite_ =
              ::google::protobuf::Message::CopyConstruct<::panelclone::DrefValue>(arena, *from._impl_.pushEvent_.drefwrite_);
        } else {
          _this->_impl_.pushEvent_.drefwrite_->MergeFrom(from._internal_drefwrite());
        }
        break;
      }
      case PUSHEVENT_NOT_SET:
        break;
    }
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void PushState::CopyFrom(const PushState& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:panelclone.PushState)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void PushState::InternalSwap(PushState* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_.pushEvent_, other->_impl_.pushEvent_);
  swap(_impl_._oneof_case_[0], other->_impl_._oneof_case_[0]);
}

::google::protobuf::Metadata PushState::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class StateUpdate::_Internal {
 public:
  using HasBits =
      decltype(std::declval<StateUpdate>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(StateUpdate, _impl_._has_bits_);
};

StateUpdate::StateUpdate(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:panelclone.StateUpdate)
}
inline PROTOBUF_NDEBUG_INLINE StateUpdate::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::panelclone::StateUpdate& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        publishedvalueindexes_{visibility, arena, from.publishedvalueindexes_},
        drefchanges_{visibility, arena, from.drefchanges_} {}

StateUpdate::StateUpdate(
    ::google::protobuf::Arena* arena,
    const StateUpdate& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  StateUpdate* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.panelframedata_ = (cached_has_bits & 0x00000001u) ? ::google::protobuf::Message::CopyConstruct<::panelclone::x264FrameData>(
                              arena, *from._impl_.panelframedata_)
                        : nullptr;
  _impl_.frame_ = from._impl_.frame_;

  // @@protoc_insertion_point(copy_constructor:panelclone.StateUpdate)
}
inline PROTOBUF_NDEBUG_INLINE StateUpdate::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0},
        publishedvalueindexes_{visibility, arena},
        drefchanges_{visibility, arena} {}

inline void StateUpdate::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, panelframedata_),
           0,
           offsetof(Impl_, frame_) -
               offsetof(Impl_, panelframedata_) +
               sizeof(Impl_::frame_));
}
StateUpdate::~StateUpdate() {
  // @@protoc_insertion_point(destructor:panelclone.StateUpdate)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void StateUpdate::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  delete _impl_.panelframedata_;
  _impl_.~Impl_();
}

PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::MessageLite::ClassDataFull
    StateUpdate::_class_data_ = {
        ::google::protobuf::Message::ClassData{
            &_StateUpdate_default_instance_._instance,
            &_table_.header,
            nullptr,  // OnDemandRegisterArenaDtor
            nullptr,  // IsInitialized
            &StateUpdate::MergeImpl,
#if defined(PROTOBUF_CUSTOM_VTABLE)
            ::google::protobuf::Message::GetDeleteImpl<StateUpdate>(),
            ::google::protobuf::Message::GetNewImpl<StateUpdate>(),
            ::google::protobuf::Message::GetClearImpl<StateUpdate>(), &StateUpdate::ByteSizeLong,
                &StateUpdate::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
            PROTOBUF_FIELD_OFFSET(StateUpdate, _impl_._cached_size_),
            false,
        },
        &StateUpdate::kDescriptorMethods,
        &descriptor_table_event_2eproto,
        nullptr,  // tracker
};
const ::google::protobuf::MessageLite::ClassData* StateUpdate::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<2, 4, 3, 0, 2> StateUpdate::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(StateUpdate, _impl_._has_bits_),
    0, // no _extensions_
    4, 24,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967280,  // skipmap
    offsetof(decltype(_table_), field_entries),
    4,  // num_field_entries
    3,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::panelclone::StateUpdate>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // optional .panelclone.x264FrameData panelFrameData = 4;
    {::_pbi::TcParser::FastMtS1,
     {34, 0, 2, PROTOBUF_FIELD_OFFSET(StateUpdate, _impl_.panelframedata_)}},
    // uint32 frame = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(StateUpdate, _impl_.frame_), 63>(),
     {8, 63, 0, PROTOBUF_FIELD_OFFSET(StateUpdate, _impl_.frame_)}},
    // repeated .panelclone.PubValIndex publishedValueIndexes = 2;
    {::_pbi::TcParser::FastMtR1,
     {18, 63, 0, PROTOBUF_FIELD_OFFSET(StateUpdate, _impl_.publishedvalueindexes_)}},
    // repeated .panelclone.DrefValue drefChanges = 3;
    {::_pbi::TcParser::FastMtR1,
     {26, 63, 1, PROTOBUF_FIELD_OFFSET(StateUpdate, _impl_.drefchanges_)}},
  }}, {{
    65535, 65535
  }}, {{
    // uint32 frame = 1;
    {PROTOBUF_FIELD_OFFSET(StateUpdate, _impl_.frame_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUInt32)},
    // repeated .panelclone.PubValIndex publishedValueIndexes = 2;
    {PROTOBUF_FIELD_OFFSET(StateUpdate, _impl_.publishedvalueindexes_), -1, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
    // repeated .panelclone.DrefValue drefChanges = 3;
    {PROTOBUF_FIELD_OFFSET(StateUpdate, _impl_.drefchanges_), -1, 1,
    (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
    // optional .panelclone.x264FrameData panelFrameData = 4;
    {PROTOBUF_FIELD_OFFSET(StateUpdate, _impl_.panelframedata_), _Internal::kHasBitsOffset + 0, 2,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::panelclone::PubValIndex>()},
    {::_pbi::TcParser::GetTable<::panelclone::DrefValue>()},
    {::_pbi::TcParser::GetTable<::panelclone::x264FrameData>()},
  }}, {{
  }},
};

PROTOBUF_NOINLINE void StateUpdate::Clear() {
// @@protoc_insertion_point(message_clear_start:panelclone.StateUpdate)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.publishedvalueindexes_.Clear();
  _impl_.drefchanges_.Clear();
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(_impl_.panelframedata_ != nullptr);
    _impl_.panelframedata_->Clear();
  }
  _impl_.frame_ = 0u;
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* StateUpdate::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const StateUpdate& this_ = static_cast<const StateUpdate&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* StateUpdate::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const StateUpdate& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:panelclone.StateUpdate)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          // uint32 frame = 1;
          if (this_._internal_frame() != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
                1, this_._internal_frame(), target);
          }

          // repeated .panelclone.PubValIndex publishedValueIndexes = 2;
          for (unsigned i = 0, n = static_cast<unsigned>(
                                   this_._internal_publishedvalueindexes_size());
               i < n; i++) {
            const auto& repfield = this_._internal_publishedvalueindexes().Get(i);
            target =
                ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                    2, repfield, repfield.GetCachedSize(),
                    target, stream);
          }

          // repeated .panelclone.DrefValue drefChanges = 3;
          for (unsigned i = 0, n = static_cast<unsigned>(
                                   this_._internal_drefchanges_size());
               i < n; i++) {
            const auto& repfield = this_._internal_drefchanges().Get(i);
            target =
                ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                    3, repfield, repfield.GetCachedSize(),
                    target, stream);
          }

          cached_has_bits = this_._impl_._has_bits_[0];
          // optional .panelclone.x264FrameData panelFrameData = 4;
          if (cached_has_bits & 0x00000001u) {
            target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                4, *this_._impl_.panelframedata_, this_._impl_.panelframedata_->GetCachedSize(), target,
                stream);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:panelclone.StateUpdate)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t StateUpdate::ByteSizeLong(const MessageLite& base) {
          const StateUpdate& this_ = static_cast<const StateUpdate&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t StateUpdate::ByteSizeLong() const {
          const StateUpdate& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:panelclone.StateUpdate)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
           {
            // repeated .panelclone.PubValIndex publishedValueIndexes = 2;
             {
              total_size += 1UL * this_._internal_publishedvalueindexes_size();
              for (const auto& msg : this_._internal_publishedvalueindexes()) {
                total_size += ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
              }
            }
            // repeated .panelclone.DrefValue drefChanges = 3;
             {
              total_size += 1UL * this_._internal_drefchanges_size();
              for (const auto& msg : this_._internal_drefchanges()) {
                total_size += ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
              }
            }
          }
           {
            // optional .panelclone.x264FrameData panelFrameData = 4;
            cached_has_bits =
                this_._impl_._has_bits_[0];
            if (cached_has_bits & 0x00000001u) {
              total_size += 1 +
                            ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.panelframedata_);
            }
          }
           {
            // uint32 frame = 1;
            if (this_._internal_frame() != 0) {
              total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
                  this_._internal_frame());
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void StateUpdate::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<StateUpdate*>(&to_msg);
  auto& from = static_cast<const StateUpdate&>(from_msg);
  ::google::protobuf::Arena* arena = _this->GetArena();
  // @@protoc_insertion_point(class_specific_merge_from_start:panelclone.StateUpdate)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_publishedvalueindexes()->MergeFrom(
      from._internal_publishedvalueindexes());
  _this->_internal_mutable_drefchanges()->MergeFrom(
      from._internal_drefchanges());
  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(from._impl_.panelframedata_ != nullptr);
    if (_this->_impl_.panelframedata_ == nullptr) {
      _this->_impl_.panelframedata_ =
          ::google::protobuf::Message::CopyConstruct<::panelclone::x264FrameData>(arena, *from._impl_.panelframedata_);
    } else {
      _this->_impl_.panelframedata_->MergeFrom(*from._impl_.panelframedata_);
    }
  }
  if (from._internal_frame() != 0) {
    _this->_impl_.frame_ = from._impl_.frame_;
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void StateUpdate::CopyFrom(const StateUpdate& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:panelclone.StateUpdate)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void StateUpdate::InternalSwap(StateUpdate* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  _impl_.publishedvalueindexes_.InternalSwap(&other->_impl_.publishedvalueindexes_);
  _impl_.drefchanges_.InternalSwap(&other->_impl_.drefchanges_);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(StateUpdate, _impl_.frame_)
      + sizeof(StateUpdate::_impl_.frame_)
      - PROTOBUF_FIELD_OFFSET(StateUpdate, _impl_.panelframedata_)>(
          reinterpret_cast<char*>(&_impl_.panelframedata_),
          reinterpret_cast<char*>(&other->_impl_.panelframedata_));
}

::google::protobuf::Metadata StateUpdate::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class x264FrameData::_Internal {
 public:
};

x264FrameData::x264FrameData(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:panelclone.x264FrameData)
}
inline PROTOBUF_NDEBUG_INLINE x264FrameData::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::panelclone::x264FrameData& from_msg)
      : image_bytes_(arena, from.image_bytes_),
        _cached_size_{0} {}

x264FrameData::x264FrameData(
    ::google::protobuf::Arena* arena,
    const x264FrameData& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  x264FrameData* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::memcpy(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, cols_),
           reinterpret_cast<const char *>(&from._impl_) +
               offsetof(Impl_, cols_),
           offsetof(Impl_, channels_) -
               offsetof(Impl_, cols_) +
               sizeof(Impl_::channels_));

  // @@protoc_insertion_point(copy_constructor:panelclone.x264FrameData)
}
inline PROTOBUF_NDEBUG_INLINE x264FrameData::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : image_bytes_(arena),
        _cached_size_{0} {}

inline void x264FrameData::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, cols_),
           0,
           offsetof(Impl_, channels_) -
               offsetof(Impl_, cols_) +
               sizeof(Impl_::channels_));
}
x264FrameData::~x264FrameData() {
  // @@protoc_insertion_point(destructor:panelclone.x264FrameData)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void x264FrameData::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.image_bytes_.Destroy();
  _impl_.~Impl_();
}

PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::MessageLite::ClassDataFull
    x264FrameData::_class_data_ = {
        ::google::protobuf::Message::ClassData{
            &_x264FrameData_default_instance_._instance,
            &_table_.header,
            nullptr,  // OnDemandRegisterArenaDtor
            nullptr,  // IsInitialized
            &x264FrameData::MergeImpl,
#if defined(PROTOBUF_CUSTOM_VTABLE)
            ::google::protobuf::Message::GetDeleteImpl<x264FrameData>(),
            ::google::protobuf::Message::GetNewImpl<x264FrameData>(),
            ::google::protobuf::Message::GetClearImpl<x264FrameData>(), &x264FrameData::ByteSizeLong,
                &x264FrameData::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
            PROTOBUF_FIELD_OFFSET(x264FrameData, _impl_._cached_size_),
            false,
        },
        &x264FrameData::kDescriptorMethods,
        &descriptor_table_event_2eproto,
        nullptr,  // tracker
};
const ::google::protobuf::MessageLite::ClassData* x264FrameData::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<2, 4, 0, 0, 2> x264FrameData::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    4, 24,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967280,  // skipmap
    offsetof(decltype(_table_), field_entries),
    4,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::panelclone::x264FrameData>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // bytes image_bytes = 4;
    {::_pbi::TcParser::FastBS1,
     {34, 63, 0, PROTOBUF_FIELD_OFFSET(x264FrameData, _impl_.image_bytes_)}},
    // int32 cols = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(x264FrameData, _impl_.cols_), 63>(),
     {8, 63, 0, PROTOBUF_FIELD_OFFSET(x264FrameData, _impl_.cols_)}},
    // int32 rows = 2;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(x264FrameData, _impl_.rows_), 63>(),
     {16, 63, 0, PROTOBUF_FIELD_OFFSET(x264FrameData, _impl_.rows_)}},
    // int32 channels = 3;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(x264FrameData, _impl_.channels_), 63>(),
     {24, 63, 0, PROTOBUF_FIELD_OFFSET(x264FrameData, _impl_.channels_)}},
  }}, {{
    65535, 65535
  }}, {{
    // int32 cols = 1;
    {PROTOBUF_FIELD_OFFSET(x264FrameData, _impl_.cols_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kInt32)},
    // int32 rows = 2;
    {PROTOBUF_FIELD_OFFSET(x264FrameData, _impl_.rows_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kInt32)},
    // int32 channels = 3;
    {PROTOBUF_FIELD_OFFSET(x264FrameData, _impl_.channels_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kInt32)},
    // bytes image_bytes = 4;
    {PROTOBUF_FIELD_OFFSET(x264FrameData, _impl_.image_bytes_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kBytes | ::_fl::kRepAString)},
  }},
  // no aux_entries
  {{
  }},
};

PROTOBUF_NOINLINE void x264FrameData::Clear() {
// @@protoc_insertion_point(message_clear_start:panelclone.x264FrameData)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.image_bytes_.ClearToEmpty();
  ::memset(&_impl_.cols_, 0, static_cast<::size_t>(
      reinterpret_cast<char*>(&_impl_.channels_) -
      reinterpret_cast<char*>(&_impl_.cols_)) + sizeof(_impl_.channels_));
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* x264FrameData::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const x264FrameData& this_ = static_cast<const x264FrameData&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* x264FrameData::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const x264FrameData& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:panelclone.x264FrameData)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          // int32 cols = 1;
          if (this_._internal_cols() != 0) {
            target = ::google::protobuf::internal::WireFormatLite::
                WriteInt32ToArrayWithField<1>(
                    stream, this_._internal_cols(), target);
          }

          // int32 rows = 2;
          if (this_._internal_rows() != 0) {
            target = ::google::protobuf::internal::WireFormatLite::
                WriteInt32ToArrayWithField<2>(
                    stream, this_._internal_rows(), target);
          }

          // int32 channels = 3;
          if (this_._internal_channels() != 0) {
            target = ::google::protobuf::internal::WireFormatLite::
                WriteInt32ToArrayWithField<3>(
                    stream, this_._internal_channels(), target);
          }

          // bytes image_bytes = 4;
          if (!this_._internal_image_bytes().empty()) {
            const std::string& _s = this_._internal_image_bytes();
            target = stream->WriteBytesMaybeAliased(4, _s, target);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:panelclone.x264FrameData)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t x264FrameData::ByteSizeLong(const MessageLite& base) {
          const x264FrameData& this_ = static_cast<const x264FrameData&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t x264FrameData::ByteSizeLong() const {
          const x264FrameData& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:panelclone.x264FrameData)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
           {
            // bytes image_bytes = 4;
            if (!this_._internal_image_bytes().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::BytesSize(
                                              this_._internal_image_bytes());
            }
            // int32 cols = 1;
            if (this_._internal_cols() != 0) {
              total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
                  this_._internal_cols());
            }
            // int32 rows = 2;
            if (this_._internal_rows() != 0) {
              total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
                  this_._internal_rows());
            }
            // int32 channels = 3;
            if (this_._internal_channels() != 0) {
              total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
                  this_._internal_channels());
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void x264FrameData::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<x264FrameData*>(&to_msg);
  auto& from = static_cast<const x264FrameData&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:panelclone.x264FrameData)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_image_bytes().empty()) {
    _this->_internal_set_image_bytes(from._internal_image_bytes());
  }
  if (from._internal_cols() != 0) {
    _this->_impl_.cols_ = from._impl_.cols_;
  }
  if (from._internal_rows() != 0) {
    _this->_impl_.rows_ = from._impl_.rows_;
  }
  if (from._internal_channels() != 0) {
    _this->_impl_.channels_ = from._impl_.channels_;
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void x264FrameData::CopyFrom(const x264FrameData& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:panelclone.x264FrameData)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void x264FrameData::InternalSwap(x264FrameData* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.image_bytes_, &other->_impl_.image_bytes_, arena);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(x264FrameData, _impl_.channels_)
      + sizeof(x264FrameData::_impl_.channels_)
      - PROTOBUF_FIELD_OFFSET(x264FrameData, _impl_.cols_)>(
          reinterpret_cast<char*>(&_impl_.cols_),
          reinterpret_cast<char*>(&other->_impl_.cols_));
}

::google::protobuf::Metadata x264FrameData::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class PubValIndex::_Internal {
 public:
};

PubValIndex::PubValIndex(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:panelclone.PubValIndex)
}
inline PROTOBUF_NDEBUG_INLINE PubValIndex::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::panelclone::PubValIndex& from_msg)
      : dataref_(arena, from.dataref_),
        _cached_size_{0} {}

PubValIndex::PubValIndex(
    ::google::protobuf::Arena* arena,
    const PubValIndex& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  PubValIndex* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::memcpy(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, index_),
           reinterpret_cast<const char *>(&from._impl_) +
               offsetof(Impl_, index_),
           offsetof(Impl_, dref_index_) -
               offsetof(Impl_, index_) +
               sizeof(Impl_::dref_index_));

  // @@protoc_insertion_point(copy_constructor:panelclone.PubValIndex)
}
inline PROTOBUF_NDEBUG_INLINE PubValIndex::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : dataref_(arena),
        _cached_size_{0} {}

inline void PubValIndex::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, index_),
           0,
           offsetof(Impl_, dref_index_) -
               offsetof(Impl_, index_) +
               sizeof(Impl_::dref_index_));
}
PubValIndex::~PubValIndex() {
  // @@protoc_insertion_point(destructor:panelclone.PubValIndex)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void PubValIndex::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.dataref_.Destroy();
  _impl_.~Impl_();
}

PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::MessageLite::ClassDataFull
    PubValIndex::_class_data_ = {
        ::google::protobuf::Message::ClassData{
            &_PubValIndex_default_instance_._instance,
            &_table_.header,
            nullptr,  // OnDemandRegisterArenaDtor
            nullptr,  // IsInitialized
            &PubValIndex::MergeImpl,
#if defined(PROTOBUF_CUSTOM_VTABLE)
            ::google::protobuf::Message::GetDeleteImpl<PubValIndex>(),
            ::google::protobuf::Message::GetNewImpl<PubValIndex>(),
            ::google::protobuf::Message::GetClearImpl<PubValIndex>(), &PubValIndex::ByteSizeLong,
                &PubValIndex::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
            PROTOBUF_FIELD_OFFSET(PubValIndex, _impl_._cached_size_),
            false,
        },
        &PubValIndex::kDescriptorMethods,
        &descriptor_table_event_2eproto,
        nullptr,  // tracker
};
const ::google::protobuf::MessageLite::ClassData* PubValIndex::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<2, 3, 0, 38, 2> PubValIndex::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    3, 24,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967288,  // skipmap
    offsetof(decltype(_table_), field_entries),
    3,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::panelclone::PubValIndex>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // int32 index = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(PubValIndex, _impl_.index_), 63>(),
     {8, 63, 0, PROTOBUF_FIELD_OFFSET(PubValIndex, _impl_.index_)}},
    // string dataref = 2;
    {::_pbi::TcParser::FastUS1,
     {18, 63, 0, PROTOBUF_FIELD_OFFSET(PubValIndex, _impl_.dataref_)}},
    // int32 dref_index = 3;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(PubValIndex, _impl_.dref_index_), 63>(),
     {24, 63, 0, PROTOBUF_FIELD_OFFSET(PubValIndex, _impl_.dref_index_)}},
  }}, {{
    65535, 65535
  }}, {{
    // int32 index = 1;
    {PROTOBUF_FIELD_OFFSET(PubValIndex, _impl_.index_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kInt32)},
    // string dataref = 2;
    {PROTOBUF_FIELD_OFFSET(PubValIndex, _impl_.dataref_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // int32 dref_index = 3;
    {PROTOBUF_FIELD_OFFSET(PubValIndex, _impl_.dref_index_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kInt32)},
  }},
  // no aux_entries
  {{
    "\26\0\7\0\0\0\0\0"
    "panelclone.PubValIndex"
    "dataref"
  }},
};

PROTOBUF_NOINLINE void PubValIndex::Clear() {
// @@protoc_insertion_point(message_clear_start:panelclone.PubValIndex)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.dataref_.ClearToEmpty();
  ::memset(&_impl_.index_, 0, static_cast<::size_t>(
      reinterpret_cast<char*>(&_impl_.dref_index_) -
      reinterpret_cast<char*>(&_impl_.index_)) + sizeof(_impl_.dref_index_));
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* PubValIndex::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const PubValIndex& this_ = static_cast<const PubValIndex&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* PubValIndex::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const PubValIndex& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:panelclone.PubValIndex)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          // int32 index = 1;
          if (this_._internal_index() != 0) {
            target = ::google::protobuf::internal::WireFormatLite::
                WriteInt32ToArrayWithField<1>(
                    stream, this_._internal_index(), target);
          }

          // string dataref = 2;
          if (!this_._internal_dataref().empty()) {
            const std::string& _s = this_._internal_dataref();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "panelclone.PubValIndex.dataref");
            target = stream->WriteStringMaybeAliased(2, _s, target);
          }

          // int32 dref_index = 3;
          if (this_._internal_dref_index() != 0) {
            target = ::google::protobuf::internal::WireFormatLite::
                WriteInt32ToArrayWithField<3>(
                    stream, this_._internal_dref_index(), target);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:panelclone.PubValIndex)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t PubValIndex::ByteSizeLong(const MessageLite& base) {
          const PubValIndex& this_ = static_cast<const PubValIndex&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t PubValIndex::ByteSizeLong() const {
          const PubValIndex& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:panelclone.PubValIndex)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
           {
            // string dataref = 2;
            if (!this_._internal_dataref().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_dataref());
            }
            // int32 index = 1;
            if (this_._internal_index() != 0) {
              total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
                  this_._internal_index());
            }
            // int32 dref_index = 3;
            if (this_._internal_dref_index() != 0) {
              total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
                  this_._internal_dref_index());
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void PubValIndex::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<PubValIndex*>(&to_msg);
  auto& from = static_cast<const PubValIndex&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:panelclone.PubValIndex)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_dataref().empty()) {
    _this->_internal_set_dataref(from._internal_dataref());
  }
  if (from._internal_index() != 0) {
    _this->_impl_.index_ = from._impl_.index_;
  }
  if (from._internal_dref_index() != 0) {
    _this->_impl_.dref_index_ = from._impl_.dref_index_;
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void PubValIndex::CopyFrom(const PubValIndex& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:panelclone.PubValIndex)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void PubValIndex::InternalSwap(PubValIndex* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.dataref_, &other->_impl_.dataref_, arena);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(PubValIndex, _impl_.dref_index_)
      + sizeof(PubValIndex::_impl_.dref_index_)
      - PROTOBUF_FIELD_OFFSET(PubValIndex, _impl_.index_)>(
          reinterpret_cast<char*>(&_impl_.index_),
          reinterpret_cast<char*>(&other->_impl_.index_));
}

::google::protobuf::Metadata PubValIndex::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class StateRequest::_Internal {
 public:
};

StateRequest::StateRequest(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:panelclone.StateRequest)
}
inline PROTOBUF_NDEBUG_INLINE StateRequest::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::panelclone::StateRequest& from_msg)
      : drefs_{visibility, arena, from.drefs_},
        _cached_size_{0} {}

StateRequest::StateRequest(
    ::google::protobuf::Arena* arena,
    const StateRequest& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  StateRequest* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);

  // @@protoc_insertion_point(copy_constructor:panelclone.StateRequest)
}
inline PROTOBUF_NDEBUG_INLINE StateRequest::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : drefs_{visibility, arena},
        _cached_size_{0} {}

inline void StateRequest::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
}
StateRequest::~StateRequest() {
  // @@protoc_insertion_point(destructor:panelclone.StateRequest)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void StateRequest::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.~Impl_();
}

PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::MessageLite::ClassDataFull
    StateRequest::_class_data_ = {
        ::google::protobuf::Message::ClassData{
            &_StateRequest_default_instance_._instance,
            &_table_.header,
            nullptr,  // OnDemandRegisterArenaDtor
            nullptr,  // IsInitialized
            &StateRequest::MergeImpl,
#if defined(PROTOBUF_CUSTOM_VTABLE)
            ::google::protobuf::Message::GetDeleteImpl<StateRequest>(),
            ::google::protobuf::Message::GetNewImpl<StateRequest>(),
            ::google::protobuf::Message::GetClearImpl<StateRequest>(), &StateRequest::ByteSizeLong,
                &StateRequest::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
            PROTOBUF_FIELD_OFFSET(StateRequest, _impl_._cached_size_),
            false,
        },
        &StateRequest::kDescriptorMethods,
        &descriptor_table_event_2eproto,
        nullptr,  // tracker
};
const ::google::protobuf::MessageLite::ClassData* StateRequest::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 1, 0, 2> StateRequest::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    2, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967293,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::panelclone::StateRequest>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // repeated .panelclone.RegisterDref drefs = 2;
    {::_pbi::TcParser::FastMtR1,
     {18, 63, 0, PROTOBUF_FIELD_OFFSET(StateRequest, _impl_.drefs_)}},
  }}, {{
    65535, 65535
  }}, {{
    // repeated .panelclone.RegisterDref drefs = 2;
    {PROTOBUF_FIELD_OFFSET(StateRequest, _impl_.drefs_), 0, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::panelclone::RegisterDref>()},
  }}, {{
  }},
};

PROTOBUF_NOINLINE void StateRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:panelclone.StateRequest)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.drefs_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* StateRequest::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const StateRequest& this_ = static_cast<const StateRequest&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* StateRequest::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const StateRequest& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:panelclone.StateRequest)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          // repeated .panelclone.RegisterDref drefs = 2;
          for (unsigned i = 0, n = static_cast<unsigned>(
                                   this_._internal_drefs_size());
               i < n; i++) {
            const auto& repfield = this_._internal_drefs().Get(i);
            target =
                ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                    2, repfield, repfield.GetCachedSize(),
                    target, stream);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:panelclone.StateRequest)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t StateRequest::ByteSizeLong(const MessageLite& base) {
          const StateRequest& this_ = static_cast<const StateRequest&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t StateRequest::ByteSizeLong() const {
          const StateRequest& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:panelclone.StateRequest)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
           {
            // repeated .panelclone.RegisterDref drefs = 2;
             {
              total_size += 1UL * this_._internal_drefs_size();
              for (const auto& msg : this_._internal_drefs()) {
                total_size += ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
              }
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void StateRequest::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<StateRequest*>(&to_msg);
  auto& from = static_cast<const StateRequest&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:panelclone.StateRequest)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_drefs()->MergeFrom(
      from._internal_drefs());
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void StateRequest::CopyFrom(const StateRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:panelclone.StateRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void StateRequest::InternalSwap(StateRequest* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.drefs_.InternalSwap(&other->_impl_.drefs_);
}

::google::protobuf::Metadata StateRequest::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class RegisterDref::_Internal {
 public:
};

RegisterDref::RegisterDref(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:panelclone.RegisterDref)
}
inline PROTOBUF_NDEBUG_INLINE RegisterDref::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::panelclone::RegisterDref& from_msg)
      : dataref_(arena, from.dataref_),
        _cached_size_{0} {}

RegisterDref::RegisterDref(
    ::google::protobuf::Arena* arena,
    const RegisterDref& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  RegisterDref* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  _impl_.index_ = from._impl_.index_;

  // @@protoc_insertion_point(copy_constructor:panelclone.RegisterDref)
}
inline PROTOBUF_NDEBUG_INLINE RegisterDref::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : dataref_(arena),
        _cached_size_{0} {}

inline void RegisterDref::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.index_ = {};
}
RegisterDref::~RegisterDref() {
  // @@protoc_insertion_point(destructor:panelclone.RegisterDref)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void RegisterDref::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.dataref_.Destroy();
  _impl_.~Impl_();
}

PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::MessageLite::ClassDataFull
    RegisterDref::_class_data_ = {
        ::google::protobuf::Message::ClassData{
            &_RegisterDref_default_instance_._instance,
            &_table_.header,
            nullptr,  // OnDemandRegisterArenaDtor
            nullptr,  // IsInitialized
            &RegisterDref::MergeImpl,
#if defined(PROTOBUF_CUSTOM_VTABLE)
            ::google::protobuf::Message::GetDeleteImpl<RegisterDref>(),
            ::google::protobuf::Message::GetNewImpl<RegisterDref>(),
            ::google::protobuf::Message::GetClearImpl<RegisterDref>(), &RegisterDref::ByteSizeLong,
                &RegisterDref::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
            PROTOBUF_FIELD_OFFSET(RegisterDref, _impl_._cached_size_),
            false,
        },
        &RegisterDref::kDescriptorMethods,
        &descriptor_table_event_2eproto,
        nullptr,  // tracker
};
const ::google::protobuf::MessageLite::ClassData* RegisterDref::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 0, 39, 2> RegisterDref::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::panelclone::RegisterDref>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // int32 index = 2;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(RegisterDref, _impl_.index_), 63>(),
     {16, 63, 0, PROTOBUF_FIELD_OFFSET(RegisterDref, _impl_.index_)}},
    // string dataref = 1;
    {::_pbi::TcParser::FastUS1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(RegisterDref, _impl_.dataref_)}},
  }}, {{
    65535, 65535
  }}, {{
    // string dataref = 1;
    {PROTOBUF_FIELD_OFFSET(RegisterDref, _impl_.dataref_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // int32 index = 2;
    {PROTOBUF_FIELD_OFFSET(RegisterDref, _impl_.index_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kInt32)},
  }},
  // no aux_entries
  {{
    "\27\7\0\0\0\0\0\0"
    "panelclone.RegisterDref"
    "dataref"
  }},
};

PROTOBUF_NOINLINE void RegisterDref::Clear() {
// @@protoc_insertion_point(message_clear_start:panelclone.RegisterDref)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.dataref_.ClearToEmpty();
  _impl_.index_ = 0;
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* RegisterDref::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const RegisterDref& this_ = static_cast<const RegisterDref&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* RegisterDref::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const RegisterDref& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:panelclone.RegisterDref)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          // string dataref = 1;
          if (!this_._internal_dataref().empty()) {
            const std::string& _s = this_._internal_dataref();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "panelclone.RegisterDref.dataref");
            target = stream->WriteStringMaybeAliased(1, _s, target);
          }

          // int32 index = 2;
          if (this_._internal_index() != 0) {
            target = ::google::protobuf::internal::WireFormatLite::
                WriteInt32ToArrayWithField<2>(
                    stream, this_._internal_index(), target);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:panelclone.RegisterDref)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t RegisterDref::ByteSizeLong(const MessageLite& base) {
          const RegisterDref& this_ = static_cast<const RegisterDref&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t RegisterDref::ByteSizeLong() const {
          const RegisterDref& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:panelclone.RegisterDref)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
           {
            // string dataref = 1;
            if (!this_._internal_dataref().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_dataref());
            }
            // int32 index = 2;
            if (this_._internal_index() != 0) {
              total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
                  this_._internal_index());
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void RegisterDref::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<RegisterDref*>(&to_msg);
  auto& from = static_cast<const RegisterDref&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:panelclone.RegisterDref)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_dataref().empty()) {
    _this->_internal_set_dataref(from._internal_dataref());
  }
  if (from._internal_index() != 0) {
    _this->_impl_.index_ = from._impl_.index_;
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void RegisterDref::CopyFrom(const RegisterDref& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:panelclone.RegisterDref)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void RegisterDref::InternalSwap(RegisterDref* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.dataref_, &other->_impl_.dataref_, arena);
        swap(_impl_.index_, other->_impl_.index_);
}

::google::protobuf::Metadata RegisterDref::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class Snapshot::_Internal {
 public:
  using HasBits =
      decltype(std::declval<Snapshot>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(Snapshot, _impl_._has_bits_);
};

Snapshot::Snapshot(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:panelclone.Snapshot)
}
inline PROTOBUF_NDEBUG_INLINE Snapshot::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::panelclone::Snapshot& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0} {}

Snapshot::Snapshot(
    ::google::protobuf::Arena* arena,
    const Snapshot& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  Snapshot* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.framesnapshot_ = (cached_has_bits & 0x00000001u) ? ::google::protobuf::Message::CopyConstruct<::panelclone::StateUpdate>(
                              arena, *from._impl_.framesnapshot_)
                        : nullptr;

  // @@protoc_insertion_point(copy_constructor:panelclone.Snapshot)
}
inline PROTOBUF_NDEBUG_INLINE Snapshot::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0} {}

inline void Snapshot::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.framesnapshot_ = {};
}
Snapshot::~Snapshot() {
  // @@protoc_insertion_point(destructor:panelclone.Snapshot)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void Snapshot::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  delete _impl_.framesnapshot_;
  _impl_.~Impl_();
}

PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::MessageLite::ClassDataFull
    Snapshot::_class_data_ = {
        ::google::protobuf::Message::ClassData{
            &_Snapshot_default_instance_._instance,
            &_table_.header,
            nullptr,  // OnDemandRegisterArenaDtor
            nullptr,  // IsInitialized
            &Snapshot::MergeImpl,
#if defined(PROTOBUF_CUSTOM_VTABLE)
            ::google::protobuf::Message::GetDeleteImpl<Snapshot>(),
            ::google::protobuf::Message::GetNewImpl<Snapshot>(),
            ::google::protobuf::Message::GetClearImpl<Snapshot>(), &Snapshot::ByteSizeLong,
                &Snapshot::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
            PROTOBUF_FIELD_OFFSET(Snapshot, _impl_._cached_size_),
            false,
        },
        &Snapshot::kDescriptorMethods,
        &descriptor_table_event_2eproto,
        nullptr,  // tracker
};
const ::google::protobuf::MessageLite::ClassData* Snapshot::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 1, 0, 2> Snapshot::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(Snapshot, _impl_._has_bits_),
    0, // no _extensions_
    2, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967293,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::panelclone::Snapshot>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // .panelclone.StateUpdate frameSnapshot = 2;
    {::_pbi::TcParser::FastMtS1,
     {18, 0, 0, PROTOBUF_FIELD_OFFSET(Snapshot, _impl_.framesnapshot_)}},
  }}, {{
    65535, 65535
  }}, {{
    // .panelclone.StateUpdate frameSnapshot = 2;
    {PROTOBUF_FIELD_OFFSET(Snapshot, _impl_.framesnapshot_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::panelclone::StateUpdate>()},
  }}, {{
  }},
};

PROTOBUF_NOINLINE void Snapshot::Clear() {
// @@protoc_insertion_point(message_clear_start:panelclone.Snapshot)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(_impl_.framesnapshot_ != nullptr);
    _impl_.framesnapshot_->Clear();
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* Snapshot::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const Snapshot& this_ = static_cast<const Snapshot&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* Snapshot::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const Snapshot& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:panelclone.Snapshot)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          cached_has_bits = this_._impl_._has_bits_[0];
          // .panelclone.StateUpdate frameSnapshot = 2;
          if (cached_has_bits & 0x00000001u) {
            target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                2, *this_._impl_.framesnapshot_, this_._impl_.framesnapshot_->GetCachedSize(), target,
                stream);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:panelclone.Snapshot)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t Snapshot::ByteSizeLong(const MessageLite& base) {
          const Snapshot& this_ = static_cast<const Snapshot&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t Snapshot::ByteSizeLong() const {
          const Snapshot& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:panelclone.Snapshot)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

           {
            // .panelclone.StateUpdate frameSnapshot = 2;
            cached_has_bits =
                this_._impl_._has_bits_[0];
            if (cached_has_bits & 0x00000001u) {
              total_size += 1 +
                            ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.framesnapshot_);
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void Snapshot::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<Snapshot*>(&to_msg);
  auto& from = static_cast<const Snapshot&>(from_msg);
  ::google::protobuf::Arena* arena = _this->GetArena();
  // @@protoc_insertion_point(class_specific_merge_from_start:panelclone.Snapshot)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(from._impl_.framesnapshot_ != nullptr);
    if (_this->_impl_.framesnapshot_ == nullptr) {
      _this->_impl_.framesnapshot_ =
          ::google::protobuf::Message::CopyConstruct<::panelclone::StateUpdate>(arena, *from._impl_.framesnapshot_);
    } else {
      _this->_impl_.framesnapshot_->MergeFrom(*from._impl_.framesnapshot_);
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void Snapshot::CopyFrom(const Snapshot& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:panelclone.Snapshot)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void Snapshot::InternalSwap(Snapshot* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  swap(_impl_.framesnapshot_, other->_impl_.framesnapshot_);
}

::google::protobuf::Metadata Snapshot::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class DrefIntArrayValue::_Internal {
 public:
};

DrefIntArrayValue::DrefIntArrayValue(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:panelclone.DrefIntArrayValue)
}
DrefIntArrayValue::DrefIntArrayValue(
    ::google::protobuf::Arena* arena, const DrefIntArrayValue& from)
    : DrefIntArrayValue(arena) {
  MergeFrom(from);
}
inline PROTOBUF_NDEBUG_INLINE DrefIntArrayValue::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0} {}

inline void DrefIntArrayValue::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, value_),
           0,
           offsetof(Impl_, index_) -
               offsetof(Impl_, value_) +
               sizeof(Impl_::index_));
}
DrefIntArrayValue::~DrefIntArrayValue() {
  // @@protoc_insertion_point(destructor:panelclone.DrefIntArrayValue)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void DrefIntArrayValue::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.~Impl_();
}

PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::MessageLite::ClassDataFull
    DrefIntArrayValue::_class_data_ = {
        ::google::protobuf::Message::ClassData{
            &_DrefIntArrayValue_default_instance_._instance,
            &_table_.header,
            nullptr,  // OnDemandRegisterArenaDtor
            nullptr,  // IsInitialized
            &DrefIntArrayValue::MergeImpl,
#if defined(PROTOBUF_CUSTOM_VTABLE)
            ::google::protobuf::Message::GetDeleteImpl<DrefIntArrayValue>(),
            ::google::protobuf::Message::GetNewImpl<DrefIntArrayValue>(),
            ::google::protobuf::Message::GetClearImpl<DrefIntArrayValue>(), &DrefIntArrayValue::ByteSizeLong,
                &DrefIntArrayValue::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
            PROTOBUF_FIELD_OFFSET(DrefIntArrayValue, _impl_._cached_size_),
            false,
        },
        &DrefIntArrayValue::kDescriptorMethods,
        &descriptor_table_event_2eproto,
        nullptr,  // tracker
};
const ::google::protobuf::MessageLite::ClassData* DrefIntArrayValue::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 0, 0, 2> DrefIntArrayValue::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::panelclone::DrefIntArrayValue>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // uint32 index = 2;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(DrefIntArrayValue, _impl_.index_), 63>(),
     {16, 63, 0, PROTOBUF_FIELD_OFFSET(DrefIntArrayValue, _impl_.index_)}},
    // int32 value = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(DrefIntArrayValue, _impl_.value_), 63>(),
     {8, 63, 0, PROTOBUF_FIELD_OFFSET(DrefIntArrayValue, _impl_.value_)}},
  }}, {{
    65535, 65535
  }}, {{
    // int32 value = 1;
    {PROTOBUF_FIELD_OFFSET(DrefIntArrayValue, _impl_.value_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kInt32)},
    // uint32 index = 2;
    {PROTOBUF_FIELD_OFFSET(DrefIntArrayValue, _impl_.index_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUInt32)},
  }},
  // no aux_entries
  {{
  }},
};

PROTOBUF_NOINLINE void DrefIntArrayValue::Clear() {
// @@protoc_insertion_point(message_clear_start:panelclone.DrefIntArrayValue)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&_impl_.value_, 0, static_cast<::size_t>(
      reinterpret_cast<char*>(&_impl_.index_) -
      reinterpret_cast<char*>(&_impl_.value_)) + sizeof(_impl_.index_));
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* DrefIntArrayValue::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const DrefIntArrayValue& this_ = static_cast<const DrefIntArrayValue&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* DrefIntArrayValue::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const DrefIntArrayValue& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:panelclone.DrefIntArrayValue)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          // int32 value = 1;
          if (this_._internal_value() != 0) {
            target = ::google::protobuf::internal::WireFormatLite::
                WriteInt32ToArrayWithField<1>(
                    stream, this_._internal_value(), target);
          }

          // uint32 index = 2;
          if (this_._internal_index() != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
                2, this_._internal_index(), target);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:panelclone.DrefIntArrayValue)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t DrefIntArrayValue::ByteSizeLong(const MessageLite& base) {
          const DrefIntArrayValue& this_ = static_cast<const DrefIntArrayValue&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t DrefIntArrayValue::ByteSizeLong() const {
          const DrefIntArrayValue& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:panelclone.DrefIntArrayValue)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
           {
            // int32 value = 1;
            if (this_._internal_value() != 0) {
              total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
                  this_._internal_value());
            }
            // uint32 index = 2;
            if (this_._internal_index() != 0) {
              total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
                  this_._internal_index());
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void DrefIntArrayValue::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<DrefIntArrayValue*>(&to_msg);
  auto& from = static_cast<const DrefIntArrayValue&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:panelclone.DrefIntArrayValue)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_value() != 0) {
    _this->_impl_.value_ = from._impl_.value_;
  }
  if (from._internal_index() != 0) {
    _this->_impl_.index_ = from._impl_.index_;
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void DrefIntArrayValue::CopyFrom(const DrefIntArrayValue& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:panelclone.DrefIntArrayValue)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void DrefIntArrayValue::InternalSwap(DrefIntArrayValue* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(DrefIntArrayValue, _impl_.index_)
      + sizeof(DrefIntArrayValue::_impl_.index_)
      - PROTOBUF_FIELD_OFFSET(DrefIntArrayValue, _impl_.value_)>(
          reinterpret_cast<char*>(&_impl_.value_),
          reinterpret_cast<char*>(&other->_impl_.value_));
}

::google::protobuf::Metadata DrefIntArrayValue::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class DrefFloatArrayValue::_Internal {
 public:
};

DrefFloatArrayValue::DrefFloatArrayValue(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:panelclone.DrefFloatArrayValue)
}
DrefFloatArrayValue::DrefFloatArrayValue(
    ::google::protobuf::Arena* arena, const DrefFloatArrayValue& from)
    : DrefFloatArrayValue(arena) {
  MergeFrom(from);
}
inline PROTOBUF_NDEBUG_INLINE DrefFloatArrayValue::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0} {}

inline void DrefFloatArrayValue::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, value_),
           0,
           offsetof(Impl_, index_) -
               offsetof(Impl_, value_) +
               sizeof(Impl_::index_));
}
DrefFloatArrayValue::~DrefFloatArrayValue() {
  // @@protoc_insertion_point(destructor:panelclone.DrefFloatArrayValue)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void DrefFloatArrayValue::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.~Impl_();
}

PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::MessageLite::ClassDataFull
    DrefFloatArrayValue::_class_data_ = {
        ::google::protobuf::Message::ClassData{
            &_DrefFloatArrayValue_default_instance_._instance,
            &_table_.header,
            nullptr,  // OnDemandRegisterArenaDtor
            nullptr,  // IsInitialized
            &DrefFloatArrayValue::MergeImpl,
#if defined(PROTOBUF_CUSTOM_VTABLE)
            ::google::protobuf::Message::GetDeleteImpl<DrefFloatArrayValue>(),
            ::google::protobuf::Message::GetNewImpl<DrefFloatArrayValue>(),
            ::google::protobuf::Message::GetClearImpl<DrefFloatArrayValue>(), &DrefFloatArrayValue::ByteSizeLong,
                &DrefFloatArrayValue::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
            PROTOBUF_FIELD_OFFSET(DrefFloatArrayValue, _impl_._cached_size_),
            false,
        },
        &DrefFloatArrayValue::kDescriptorMethods,
        &descriptor_table_event_2eproto,
        nullptr,  // tracker
};
const ::google::protobuf::MessageLite::ClassData* DrefFloatArrayValue::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 0, 0, 2> DrefFloatArrayValue::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::panelclone::DrefFloatArrayValue>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // uint32 index = 2;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(DrefFloatArrayValue, _impl_.index_), 63>(),
     {16, 63, 0, PROTOBUF_FIELD_OFFSET(DrefFloatArrayValue, _impl_.index_)}},
    // float value = 1;
    {::_pbi::TcParser::FastF32S1,
     {13, 63, 0, PROTOBUF_FIELD_OFFSET(DrefFloatArrayValue, _impl_.value_)}},
  }}, {{
    65535, 65535
  }}, {{
    // float value = 1;
    {PROTOBUF_FIELD_OFFSET(DrefFloatArrayValue, _impl_.value_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kFloat)},
    // uint32 index = 2;
    {PROTOBUF_FIELD_OFFSET(DrefFloatArrayValue, _impl_.index_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUInt32)},
  }},
  // no aux_entries
  {{
  }},
};

PROTOBUF_NOINLINE void DrefFloatArrayValue::Clear() {
// @@protoc_insertion_point(message_clear_start:panelclone.DrefFloatArrayValue)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&_impl_.value_, 0, static_cast<::size_t>(
      reinterpret_cast<char*>(&_impl_.index_) -
      reinterpret_cast<char*>(&_impl_.value_)) + sizeof(_impl_.index_));
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* DrefFloatArrayValue::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const DrefFloatArrayValue& this_ = static_cast<const DrefFloatArrayValue&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* DrefFloatArrayValue::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const DrefFloatArrayValue& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:panelclone.DrefFloatArrayValue)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          // float value = 1;
          if (::absl::bit_cast<::uint32_t>(this_._internal_value()) != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteFloatToArray(
                1, this_._internal_value(), target);
          }

          // uint32 index = 2;
          if (this_._internal_index() != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
                2, this_._internal_index(), target);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:panelclone.DrefFloatArrayValue)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t DrefFloatArrayValue::ByteSizeLong(const MessageLite& base) {
          const DrefFloatArrayValue& this_ = static_cast<const DrefFloatArrayValue&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t DrefFloatArrayValue::ByteSizeLong() const {
          const DrefFloatArrayValue& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:panelclone.DrefFloatArrayValue)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
           {
            // float value = 1;
            if (::absl::bit_cast<::uint32_t>(this_._internal_value()) != 0) {
              total_size += 5;
            }
            // uint32 index = 2;
            if (this_._internal_index() != 0) {
              total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
                  this_._internal_index());
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void DrefFloatArrayValue::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<DrefFloatArrayValue*>(&to_msg);
  auto& from = static_cast<const DrefFloatArrayValue&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:panelclone.DrefFloatArrayValue)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (::absl::bit_cast<::uint32_t>(from._internal_value()) != 0) {
    _this->_impl_.value_ = from._impl_.value_;
  }
  if (from._internal_index() != 0) {
    _this->_impl_.index_ = from._impl_.index_;
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void DrefFloatArrayValue::CopyFrom(const DrefFloatArrayValue& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:panelclone.DrefFloatArrayValue)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void DrefFloatArrayValue::InternalSwap(DrefFloatArrayValue* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(DrefFloatArrayValue, _impl_.index_)
      + sizeof(DrefFloatArrayValue::_impl_.index_)
      - PROTOBUF_FIELD_OFFSET(DrefFloatArrayValue, _impl_.value_)>(
          reinterpret_cast<char*>(&_impl_.value_),
          reinterpret_cast<char*>(&other->_impl_.value_));
}

::google::protobuf::Metadata DrefFloatArrayValue::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class DrefByteValue::_Internal {
 public:
};

DrefByteValue::DrefByteValue(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:panelclone.DrefByteValue)
}
inline PROTOBUF_NDEBUG_INLINE DrefByteValue::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::panelclone::DrefByteValue& from_msg)
      : value_(arena, from.value_),
        _cached_size_{0} {}

DrefByteValue::DrefByteValue(
    ::google::protobuf::Arena* arena,
    const DrefByteValue& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  DrefByteValue* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  _impl_.size_ = from._impl_.size_;

  // @@protoc_insertion_point(copy_constructor:panelclone.DrefByteValue)
}
inline PROTOBUF_NDEBUG_INLINE DrefByteValue::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : value_(arena),
        _cached_size_{0} {}

inline void DrefByteValue::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.size_ = {};
}
DrefByteValue::~DrefByteValue() {
  // @@protoc_insertion_point(destructor:panelclone.DrefByteValue)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void DrefByteValue::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.value_.Destroy();
  _impl_.~Impl_();
}

PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::MessageLite::ClassDataFull
    DrefByteValue::_class_data_ = {
        ::google::protobuf::Message::ClassData{
            &_DrefByteValue_default_instance_._instance,
            &_table_.header,
            nullptr,  // OnDemandRegisterArenaDtor
            nullptr,  // IsInitialized
            &DrefByteValue::MergeImpl,
#if defined(PROTOBUF_CUSTOM_VTABLE)
            ::google::protobuf::Message::GetDeleteImpl<DrefByteValue>(),
            ::google::protobuf::Message::GetNewImpl<DrefByteValue>(),
            ::google::protobuf::Message::GetClearImpl<DrefByteValue>(), &DrefByteValue::ByteSizeLong,
                &DrefByteValue::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
            PROTOBUF_FIELD_OFFSET(DrefByteValue, _impl_._cached_size_),
            false,
        },
        &DrefByteValue::kDescriptorMethods,
        &descriptor_table_event_2eproto,
        nullptr,  // tracker
};
const ::google::protobuf::MessageLite::ClassData* DrefByteValue::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 0, 0, 2> DrefByteValue::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::panelclone::DrefByteValue>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // uint32 size = 2;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(DrefByteValue, _impl_.size_), 63>(),
     {16, 63, 0, PROTOBUF_FIELD_OFFSET(DrefByteValue, _impl_.size_)}},
    // bytes value = 1;
    {::_pbi::TcParser::FastBS1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(DrefByteValue, _impl_.value_)}},
  }}, {{
    65535, 65535
  }}, {{
    // bytes value = 1;
    {PROTOBUF_FIELD_OFFSET(DrefByteValue, _impl_.value_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kBytes | ::_fl::kRepAString)},
    // uint32 size = 2;
    {PROTOBUF_FIELD_OFFSET(DrefByteValue, _impl_.size_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUInt32)},
  }},
  // no aux_entries
  {{
  }},
};

PROTOBUF_NOINLINE void DrefByteValue::Clear() {
// @@protoc_insertion_point(message_clear_start:panelclone.DrefByteValue)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.value_.ClearToEmpty();
  _impl_.size_ = 0u;
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* DrefByteValue::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const DrefByteValue& this_ = static_cast<const DrefByteValue&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* DrefByteValue::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const DrefByteValue& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:panelclone.DrefByteValue)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          // bytes value = 1;
          if (!this_._internal_value().empty()) {
            const std::string& _s = this_._internal_value();
            target = stream->WriteBytesMaybeAliased(1, _s, target);
          }

          // uint32 size = 2;
          if (this_._internal_size() != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
                2, this_._internal_size(), target);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:panelclone.DrefByteValue)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t DrefByteValue::ByteSizeLong(const MessageLite& base) {
          const DrefByteValue& this_ = static_cast<const DrefByteValue&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t DrefByteValue::ByteSizeLong() const {
          const DrefByteValue& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:panelclone.DrefByteValue)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
           {
            // bytes value = 1;
            if (!this_._internal_value().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::BytesSize(
                                              this_._internal_value());
            }
            // uint32 size = 2;
            if (this_._internal_size() != 0) {
              total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
                  this_._internal_size());
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void DrefByteValue::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<DrefByteValue*>(&to_msg);
  auto& from = static_cast<const DrefByteValue&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:panelclone.DrefByteValue)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_value().empty()) {
    _this->_internal_set_value(from._internal_value());
  }
  if (from._internal_size() != 0) {
    _this->_impl_.size_ = from._impl_.size_;
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void DrefByteValue::CopyFrom(const DrefByteValue& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:panelclone.DrefByteValue)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void DrefByteValue::InternalSwap(DrefByteValue* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.value_, &other->_impl_.value_, arena);
        swap(_impl_.size_, other->_impl_.size_);
}

::google::protobuf::Metadata DrefByteValue::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class DrefValue::_Internal {
 public:
  static constexpr ::int32_t kOneofCaseOffset =
      PROTOBUF_FIELD_OFFSET(::panelclone::DrefValue, _impl_._oneof_case_);
};

void DrefValue::set_allocated_byteval(::panelclone::DrefByteValue* byteval) {
  ::google::protobuf::Arena* message_arena = GetArena();
  clear_value();
  if (byteval) {
    ::google::protobuf::Arena* submessage_arena = byteval->GetArena();
    if (message_arena != submessage_arena) {
      byteval = ::google::protobuf::internal::GetOwnedMessage(message_arena, byteval, submessage_arena);
    }
    set_has_byteval();
    _impl_.value_.byteval_ = byteval;
  }
  // @@protoc_insertion_point(field_set_allocated:panelclone.DrefValue.byteVal)
}
DrefValue::DrefValue(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:panelclone.DrefValue)
}
inline PROTOBUF_NDEBUG_INLINE DrefValue::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::panelclone::DrefValue& from_msg)
      : value_{},
        _cached_size_{0},
        _oneof_case_{from._oneof_case_[0]} {}

DrefValue::DrefValue(
    ::google::protobuf::Arena* arena,
    const DrefValue& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  DrefValue* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  _impl_.index_ = from._impl_.index_;
  switch (value_case()) {
    case VALUE_NOT_SET:
      break;
      case kIntVal:
        _impl_.value_.intval_ = from._impl_.value_.intval_;
        break;
      case kFloatVal:
        _impl_.value_.floatval_ = from._impl_.value_.floatval_;
        break;
      case kDoubleVal:
        _impl_.value_.doubleval_ = from._impl_.value_.doubleval_;
        break;
      case kByteVal:
        _impl_.value_.byteval_ = ::google::protobuf::Message::CopyConstruct<::panelclone::DrefByteValue>(arena, *from._impl_.value_.byteval_);
        break;
  }

  // @@protoc_insertion_point(copy_constructor:panelclone.DrefValue)
}
inline PROTOBUF_NDEBUG_INLINE DrefValue::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : value_{},
        _cached_size_{0},
        _oneof_case_{} {}

inline void DrefValue::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.index_ = {};
}
DrefValue::~DrefValue() {
  // @@protoc_insertion_point(destructor:panelclone.DrefValue)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void DrefValue::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  if (has_value()) {
    clear_value();
  }
  _impl_.~Impl_();
}

void DrefValue::clear_value() {
// @@protoc_insertion_point(one_of_clear_start:panelclone.DrefValue)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  switch (value_case()) {
    case kIntVal: {
      // No need to clear
      break;
    }
    case kFloatVal: {
      // No need to clear
      break;
    }
    case kDoubleVal: {
      // No need to clear
      break;
    }
    case kByteVal: {
      if (GetArena() == nullptr) {
        delete _impl_.value_.byteval_;
      } else if (::google::protobuf::internal::DebugHardenClearOneofMessageOnArena()) {
        ::google::protobuf::internal::MaybePoisonAfterClear(_impl_.value_.byteval_);
      }
      break;
    }
    case VALUE_NOT_SET: {
      break;
    }
  }
  _impl_._oneof_case_[0] = VALUE_NOT_SET;
}


PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::MessageLite::ClassDataFull
    DrefValue::_class_data_ = {
        ::google::protobuf::Message::ClassData{
            &_DrefValue_default_instance_._instance,
            &_table_.header,
            nullptr,  // OnDemandRegisterArenaDtor
            nullptr,  // IsInitialized
            &DrefValue::MergeImpl,
#if defined(PROTOBUF_CUSTOM_VTABLE)
            ::google::protobuf::Message::GetDeleteImpl<DrefValue>(),
            ::google::protobuf::Message::GetNewImpl<DrefValue>(),
            ::google::protobuf::Message::GetClearImpl<DrefValue>(), &DrefValue::ByteSizeLong,
                &DrefValue::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
            PROTOBUF_FIELD_OFFSET(DrefValue, _impl_._cached_size_),
            false,
        },
        &DrefValue::kDescriptorMethods,
        &descriptor_table_event_2eproto,
        nullptr,  // tracker
};
const ::google::protobuf::MessageLite::ClassData* DrefValue::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 5, 1, 0, 2> DrefValue::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    7, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967192,  // skipmap
    offsetof(decltype(_table_), field_entries),
    5,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::panelclone::DrefValue>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // uint32 index = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(DrefValue, _impl_.index_), 63>(),
     {8, 63, 0, PROTOBUF_FIELD_OFFSET(DrefValue, _impl_.index_)}},
  }}, {{
    65535, 65535
  }}, {{
    // uint32 index = 1;
    {PROTOBUF_FIELD_OFFSET(DrefValue, _impl_.index_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUInt32)},
    // int32 intVal = 2;
    {PROTOBUF_FIELD_OFFSET(DrefValue, _impl_.value_.intval_), _Internal::kOneofCaseOffset + 0, 0,
    (0 | ::_fl::kFcOneof | ::_fl::kInt32)},
    // float floatVal = 3;
    {PROTOBUF_FIELD_OFFSET(DrefValue, _impl_.value_.floatval_), _Internal::kOneofCaseOffset + 0, 0,
    (0 | ::_fl::kFcOneof | ::_fl::kFloat)},
    // double doubleVal = 6;
    {PROTOBUF_FIELD_OFFSET(DrefValue, _impl_.value_.doubleval_), _Internal::kOneofCaseOffset + 0, 0,
    (0 | ::_fl::kFcOneof | ::_fl::kDouble)},
    // .panelclone.DrefByteValue byteVal = 7;
    {PROTOBUF_FIELD_OFFSET(DrefValue, _impl_.value_.byteval_), _Internal::kOneofCaseOffset + 0, 0,
    (0 | ::_fl::kFcOneof | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::panelclone::DrefByteValue>()},
  }}, {{
  }},
};

PROTOBUF_NOINLINE void DrefValue::Clear() {
// @@protoc_insertion_point(message_clear_start:panelclone.DrefValue)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.index_ = 0u;
  clear_value();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* DrefValue::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const DrefValue& this_ = static_cast<const DrefValue&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* DrefValue::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const DrefValue& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:panelclone.DrefValue)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          // uint32 index = 1;
          if (this_._internal_index() != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
                1, this_._internal_index(), target);
          }

          switch (this_.value_case()) {
            case kIntVal: {
              target = ::google::protobuf::internal::WireFormatLite::
                  WriteInt32ToArrayWithField<2>(
                      stream, this_._internal_intval(), target);
              break;
            }
            case kFloatVal: {
              target = stream->EnsureSpace(target);
              target = ::_pbi::WireFormatLite::WriteFloatToArray(
                  3, this_._internal_floatval(), target);
              break;
            }
            case kDoubleVal: {
              target = stream->EnsureSpace(target);
              target = ::_pbi::WireFormatLite::WriteDoubleToArray(
                  6, this_._internal_doubleval(), target);
              break;
            }
            case kByteVal: {
              target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                  7, *this_._impl_.value_.byteval_, this_._impl_.value_.byteval_->GetCachedSize(), target,
                  stream);
              break;
            }
            default:
              break;
          }
          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:panelclone.DrefValue)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t DrefValue::ByteSizeLong(const MessageLite& base) {
          const DrefValue& this_ = static_cast<const DrefValue&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t DrefValue::ByteSizeLong() const {
          const DrefValue& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:panelclone.DrefValue)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

           {
            // uint32 index = 1;
            if (this_._internal_index() != 0) {
              total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
                  this_._internal_index());
            }
          }
          switch (this_.value_case()) {
            // int32 intVal = 2;
            case kIntVal: {
              total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
                  this_._internal_intval());
              break;
            }
            // float floatVal = 3;
            case kFloatVal: {
              total_size += 5;
              break;
            }
            // double doubleVal = 6;
            case kDoubleVal: {
              total_size += 9;
              break;
            }
            // .panelclone.DrefByteValue byteVal = 7;
            case kByteVal: {
              total_size += 1 +
                            ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.value_.byteval_);
              break;
            }
            case VALUE_NOT_SET: {
              break;
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void DrefValue::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<DrefValue*>(&to_msg);
  auto& from = static_cast<const DrefValue&>(from_msg);
  ::google::protobuf::Arena* arena = _this->GetArena();
  // @@protoc_insertion_point(class_specific_merge_from_start:panelclone.DrefValue)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_index() != 0) {
    _this->_impl_.index_ = from._impl_.index_;
  }
  if (const uint32_t oneof_from_case = from._impl_._oneof_case_[0]) {
    const uint32_t oneof_to_case = _this->_impl_._oneof_case_[0];
    const bool oneof_needs_init = oneof_to_case != oneof_from_case;
    if (oneof_needs_init) {
      if (oneof_to_case != 0) {
        _this->clear_value();
      }
      _this->_impl_._oneof_case_[0] = oneof_from_case;
    }

    switch (oneof_from_case) {
      case kIntVal: {
        _this->_impl_.value_.intval_ = from._impl_.value_.intval_;
        break;
      }
      case kFloatVal: {
        _this->_impl_.value_.floatval_ = from._impl_.value_.floatval_;
        break;
      }
      case kDoubleVal: {
        _this->_impl_.value_.doubleval_ = from._impl_.value_.doubleval_;
        break;
      }
      case kByteVal: {
        if (oneof_needs_init) {
          _this->_impl_.value_.byteval_ =
              ::google::protobuf::Message::CopyConstruct<::panelclone::DrefByteValue>(arena, *from._impl_.value_.byteval_);
        } else {
          _this->_impl_.value_.byteval_->MergeFrom(from._internal_byteval());
        }
        break;
      }
      case VALUE_NOT_SET:
        break;
    }
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void DrefValue::CopyFrom(const DrefValue& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:panelclone.DrefValue)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void DrefValue::InternalSwap(DrefValue* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
        swap(_impl_.index_, other->_impl_.index_);
  swap(_impl_.value_, other->_impl_.value_);
  swap(_impl_._oneof_case_[0], other->_impl_._oneof_case_[0]);
}

::google::protobuf::Metadata DrefValue::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// @@protoc_insertion_point(namespace_scope)
}  // namespace panelclone
namespace google {
namespace protobuf {
}  // namespace protobuf
}  // namespace google
// @@protoc_insertion_point(global_scope)
PROTOBUF_ATTRIBUTE_INIT_PRIORITY2 static ::std::false_type
    _static_init2_ PROTOBUF_UNUSED =
        (::_pbi::AddDescriptors(&descriptor_table_event_2eproto),
         ::std::false_type{});
#include "google/protobuf/port_undef.inc"
